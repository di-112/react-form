{"version":3,"sources":["components/buttonsPanel/buttonsPanel.jsx","components/form/form.jsx","components/events/events.jsx","App.js","reportWebVitals.js","index.js"],"names":["ButtonsPanel","countEvent","incrementCount","decrementCount","className","onClick","danger","disabled","htmlType","formatDate","Form","setCountEvent","setData","useForm","mode","handleSubmit","control","errors","formState","unregister","onSubmit","data","startDate","Object","keys","forEach","key","diffDate","eventDate","diff","format","htmlFor","defaultValue","moment","name","render","field","id","Array","fill","map","_","index","style","marginBottom","rules","required","placeholder","size","type","event","prevCount","Event","wordForDays","getWordForDiffDate","Math","abs","Events","events","App","useState","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6561a351.chunk.js","sourcesContent":["import { Button } from 'antd'\r\nimport React from 'react'\r\nimport './buttonsPanel.scss'\r\n\r\nconst ButtonsPanel = ({ countEvent, incrementCount, decrementCount }) => {\r\n  return (\r\n    <div className=\"form-btns\">\r\n      <div className=\"set-count-btns\">\r\n        <Button className=\"add\" onClick={incrementCount}>\r\n          +\r\n        </Button>\r\n        <Button className=\"remove\" danger disabled={countEvent > 1 ? false : true} onClick={decrementCount}>\r\n          -\r\n        </Button>\r\n      </div>\r\n      <Button className=\"submit-btn\" htmlType=\"submit\">\r\n        Отправить\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ButtonsPanel\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { DatePicker, Input } from 'antd'\r\nimport ButtonsPanel from '../buttonsPanel/buttonsPanel'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport './form.scss'\r\n\r\nconst formatDate = 'DD-MM-YYYY'\r\n\r\nconst Form = ({ setCountEvent, setData, countEvent }) => {\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n    unregister,\r\n  } = useForm({\r\n    mode: 'onBlur',\r\n  })\r\n\r\n  const incrementCount = () => setCountEvent(prevCount => prevCount + 1)\r\n\r\n  const decrementCount = () => {\r\n    unregister(`${countEvent - 1}`)\r\n    setCountEvent(prevCount => prevCount - 1)\r\n  }\r\n\r\n  const submitData = data => {\r\n    const startDate = data.startDate\r\n\r\n    delete data.startDate\r\n\r\n    Object.keys(data).forEach(key => {\r\n      data[key].diffDate = data[key].eventDate.diff(startDate, 'days')\r\n      if (data[key].diffDate < 1) {\r\n        if (data[key].eventDate.format(formatDate) !== startDate.format(formatDate)) data[key].diffDate = data[key].diffDate - 1\r\n      }\r\n\r\n      data[key].eventDate = data[key].eventDate.format(formatDate)\r\n    })\r\n\r\n    setData(data)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submitData)}>\r\n      <label htmlFor=\"currDate\">Дата отсчета:</label>\r\n      <Controller\r\n        control={control}\r\n        defaultValue={moment()}\r\n        name=\"startDate\"\r\n        render={({ field }) => <DatePicker {...field} id=\"currDate\" format={formatDate} className=\"current-date\" />}\r\n      />\r\n      {new Array(countEvent).fill('').map((_, index) => (\r\n        <div style={{ marginBottom: '20px' }} key={index}>\r\n          <div className=\"event\">\r\n            <label htmlFor=\"eventName\">Название события: </label>\r\n            <Controller\r\n              name={`${index}.event`}\r\n              control={control}\r\n              rules={{ required: true }}\r\n              render={({ field }) => (\r\n                <Input {...field} id=\"eventName\" className=\"event__name\" placeholder=\"Enter event name, please\" size=\"big\" type=\"text\" />\r\n              )}\r\n            />\r\n\r\n            <label htmlFor=\"eventDate\">Дата события: </label>\r\n            <Controller\r\n              name={`${index}.eventDate`}\r\n              control={control}\r\n              rules={{ required: true }}\r\n              render={({ field }) => <DatePicker {...field} id=\"eventDate\" format={formatDate} className=\"event__date\" />}\r\n            />\r\n          </div>\r\n          {errors[`${index}`] ? errors[`${index}`].event && <div className=\"error\">Ведите название события</div> : ''}\r\n          {errors[`${index}`] ? errors[`${index}`].eventDate && <div className=\"error\">Ведите дату события</div> : ''}\r\n        </div>\r\n      ))}\r\n      <ButtonsPanel countEvent={countEvent} incrementCount={incrementCount} decrementCount={decrementCount} />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\nimport './events.scss'\r\n\r\nconst getWordForDiffDate = diffDate => {\r\n  switch (diffDate) {\r\n    case 0:\r\n      return 'сегодня'\r\n\r\n    case 1:\r\n      return 'завтра'\r\n\r\n    case -1:\r\n      return 'вчера'\r\n\r\n    case 2:\r\n    case 3:\r\n    case 4:\r\n    case -2:\r\n    case -3:\r\n    case -4:\r\n      return 'дня'\r\n\r\n    default:\r\n      return 'дней'\r\n  }\r\n}\r\n\r\nconst Events = ({ events }) => {\r\n  return (\r\n    <div className=\"sended-events\">\r\n      {Object.keys(events).map(key => (\r\n        <Event key={key} event={events[key]} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Event = ({ event }) => {\r\n  let wordForDays = getWordForDiffDate(event.diffDate)\r\n\r\n  return (\r\n    <div className=\"event\">\r\n      <strong>Событие </strong>\r\n      <span>{event.event}</span>\r\n\r\n      {event.diffDate > 0 ? (\r\n        <>\r\n          <strong> Произойдет </strong>\r\n          <span>\r\n            {event.diffDate > 1 ? (\r\n              <>\r\n                через {event.diffDate} {wordForDays}\r\n              </>\r\n            ) : (\r\n              <>{wordForDays} </>\r\n            )}\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <strong> Произошло {event.diffDate === 0 ? <>/ Произойдет </> : ''}</strong>\r\n          <span>\r\n            {event.diffDate === -1 || event.diffDate === 0 ? (\r\n              <>{wordForDays} </>\r\n            ) : (\r\n              <>\r\n                {Math.abs(event.diffDate)} {wordForDays} назад\r\n              </>\r\n            )}\r\n          </span>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Events\r\n","import './App.scss'\nimport 'antd/dist/antd.css'\nimport React, { useState } from 'react'\nimport Form from './components/form/form'\nimport Events from './components/events/events'\n\nconst App = () => {\n  const [countEvent, setCountEvent] = useState(1)\n\n  const [data, setData] = useState({})\n\n  return (\n    <div className=\"app\">\n      <Form setCountEvent={setCountEvent} setData={setData} countEvent={countEvent} />\n      {Object.keys(data).length ? <Events events={data} /> : ''}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}